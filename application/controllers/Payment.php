<?phpdefined('BASEPATH') or exit('No direct script access allowed');use GuzzleHttp\Client;class Payment extends CI_Controller{    private $MERCHANTID = 578871000;    private $APIKEY = 105948;    private $ServiceTypes = [        'Acceptance_Fee' => 8296745873,        'TUITION' => 1099842539,        'Accommodation' => 577213877,        'Late_Registration' => 577225753,        'ID_Card_Replacement' => 3671078532,        'Inter_University_Transfer' => 3820246302    ];    public function __construct()    {        parent::__construct();        $this->load->model(['payment_model', 'student_model']);    }    function getRemita_RRR($payerInfo)    {        $data = [            "serviceTypeId" => $this->ServiceTypes[$payerInfo['service_type']],            "amount" => $payerInfo['amount'],            "orderId" => md5(time().mt_rand()),            "payerName" => $payerInfo['name'],            "payerEmail" => $payerInfo['email'],            "payerPhone" => $payerInfo['phone'],            "description" => $payerInfo['description']        ];        $data['apiHash'] = hash('SHA512', $this->MERCHANTID . $data['serviceTypeId'] . $data['orderId'] . $data['amount'] .$this->APIKEY);        $url = "https://login.remita.net/remita/exapp/api/v1/send/api/echannelsvc/merchant/api/paymentinit";        $options = [            'http' => [                'method'  => 'POST',                'content' => json_encode($data),                'header' =>  "Content-Type: application/json\r\n" .                    "Accept: application/json\r\n" .                    "Authorization:remitaConsumerKey=".$this->MERCHANTID.",remitaConsumerToken=" . $data['apiHash']            ]        ];        $context  = stream_context_create($options);        $result = file_get_contents($url, false, $context);        return $result ? json_decode($result, true) : false ;    }    function checkPaymentStatus() {        $rrr = $this->uri->segment(3);        $apiHash = hash('SHA512',  $rrr. $this->APIKEY.$this->MERCHANTID);        $url = "https://login.remita.net/remita/ecomm/578871000/".$rrr."/".$apiHash."/status.reg";        $options = [            'http' => [                'method'  => 'GET',                'header' =>  "Content-Type: application/json\r\n" .                    "Accept: application/json\r\n" .                    "Authorization:remitaConsumerKey=".$this->MERCHANTID.",remitaConsumerToken=" . $apiHash            ]        ];        $context  = stream_context_create($options);        $result = file_get_contents($url, false, $context);        if(!$result){            $this->session->set_flashdata('msg', "Oops!!! Somthing went wrong, Please try Again");            redirect('payment/history/'.md5(time()), 'refresh');        }        $result = json_decode($result, true);        //var_dump($result); die;        $data = [            'status' => ($result['status'] == 00 || $result['status'] == 01) ? "PAID" : "PENDING",            'rrr' => $result['RRR'],            'orderid' => $result['orderId']        ];        $this->payment_model->updatePaymentStatus($data);        $this->session->set_flashdata('msg', "Payment Status Updated Successfully");        redirect('payment/history/'.md5(time()), 'refresh');    }    public function init(){        $student = $this->student_model->getBio($_SESSION['userid']);        $contact = $this->student_model->getContactInfo($_SESSION['userid']);                $rrr_invoice_amount = $_SESSION['rrr_invoice_amount'];        $rrr_invoice_description = $_SESSION['rrr_invoice_description'];        $rrr_invoice_type = $_SESSION['rrr_invoice_type'];                 $name = strtoupper($student->surname).", ".ucwords(strtolower($student->firstname." ".$student->othername))." - ".substr($student->username, 0, 10)." - ".$student->current_level.'L';        $phone = $contact->phone ? $contact->phone : "0700 000 0000";        $email = $contact->email ? $contact->email : "collections@fubk.edu.ng";               $payerInfo = [            "service_type" => $rrr_invoice_type,            "amount" => $rrr_invoice_amount,            "name" => $name,            "email" => strtolower($email),            "phone" => $phone,            "description" => $rrr_invoice_description        ];                $rrr_response = $this->getRemita_RRR($payerInfo);        if(!$rrr_response || !$rrr_response['RRR']){            $this->session->set_flashdata('msg', "Oops!!! Somthing went wrong, Please generate the Invoice Again");            redirect('payment/paymentPage/'.md5(time()), 'refresh');        }                $data = [            'user_id' => $_SESSION['userid'],            'rrr' => $rrr_response['RRR'],            'type' => $rrr_invoice_type == "TUITION" ? "School Fees" : $rrr_invoice_type,            'orderid' => md5(time()),            'amount' => $rrr_invoice_amount,            'level' => $student->current_level,            'session' => $_SESSION['active_session']        ];        $res = $this->payment_model->registerPayment($data);        if($res){            $this->session->set_flashdata('msg', "Payment Generated Successfully");            redirect('payment/history', 'refresh');        }else{            $this->session->set_flashdata('msg', "Payment Generation Failed. Please Try Again");            redirect('payment/paymentPage/'.$rrr_invoice_type, 'refresh');        }    }    public function history(){        $_SESSION['pageTitle'] = 'Payment History .::. University Portal';        $data = [            'pay_history' => $this->payment_model->getPaymentHistory($_SESSION['userid']),            'curr_session' => $this->payment_model->paymentCurrentSession($_SESSION['userid'])         ];        $this->load->view('payment/mypayment', $data);    }    public function paymentPage(){        $_SESSION['pageTitle'] = 'Payment Summary .::. University Portal';        $type = $this->uri->segment(3);                $totalAmount = false;        $description = false;        $role="single";        $student = $this->student_model->getBio($_SESSION['userid']);        if($type == "TUITION"){            $param = [                'level' => $student->current_level,                'programid' => $student->programid,                'entrymode' =>$student->entrymode,                'session' => $_SESSION['active_session']            ];            $totalAmount = $this->payment_model->getPaymentAmount($param);            $description = "Undergraduate Tuition Fees for ".$_SESSION['active_session']." session";            $role="multiple";                    }else if($type="ACCEPTANCE"){            $totalAmount = 5000;            $description = "Undergraduate Admissions Acceptance Fees";        }else if($type = "ACCOMODATION"){            $totalAmount = 10000;            $description = "Undergraduate Accomodation Fees";        }else if($type= "InterUniTransfer"){            $totalAmount = 100000;            $description = "Inter University Transfer Fees";        }                if(!$totalAmount or !$description){            $this->session->set_flashdata('msg', "Something went wrong. Please Try Again or contact the ICT");            redirect('payment/history/'.md5(time()), 'refresh');        }                $data = [            'student' =>$student,            'type'=> $type,            'feesInfo' => $totalAmount,            'description' => $description,            'role' => $role        ];        //var_dump($data);die;        $this->load->view('payment/paymentpage', $data);    }    //Payment noficiation URL    public function notify(){	    //get and decode JSON data sent by remita		$paymentinfo = file_get_contents('php://input');		$paymentinfo=json_decode($paymentinfo, true);				echo "OK";	}    /*public function getRemitaInfo(){        $data = [            'serviceid' => 3820246302,            'amount' => 300000,            'description' => "Inter Unviersity Transfer"        ];        $info = $this->getRemitaRRRX($data);        if($info['statuscode'] == '025'){            $rrr = $info['RRR'];            redirect('https://login.remita.net/remita/exapp/api/v1/send/api/print/billsvc/biller/'.$rrr.'/printinvoiceRequest.pdf', 'refresh');        }else{            echo "Something went wrong. Please try again";        }    }        function getRemitaRRRX($info){        $data = [            "serviceTypeId" => $info['serviceid'],            "amount" => $info['amount'],            "orderId" => md5(time().mt_rand()),            "payerName" => "John Doe",            "payerEmail" => "jdoe@fubk.edu.ng",            "payerPhone" => "07024343533",            "description" => $info['description'],            "customFields" =>  [                [ "name" => "Level", "value" => "200L"],                [ "name" => "Session", "value" => "2020/21"],                [ "name" => "Generated By", "value" => "Self"],            ]        ];        $data['apiHash'] = hash('SHA512', "578871000".$data['serviceTypeId'].$data['orderId'].$data['amount']."105948");        $url = "https://login.remita.net/remita/exapp/api/v1/send/api/echannelsvc/merchant/api/paymentinit";        $options = [            'http' => [                'method'  => 'POST',                'content' => json_encode($data),                'header' =>  "Content-Type: application/json\r\n" .                    "Accept: application/json\r\n" .                    "Authorization:remitaConsumerKey=578871000,remitaConsumerToken=" . $data['apiHash']            ]        ];        $context  = stream_context_create($options);        $result = file_get_contents($url, false, $context);        $result = $result ? json_decode($result, true) : false ;        return $result;    }    */}